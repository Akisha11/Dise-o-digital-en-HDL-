import tkinter as tk
from random import r and range
root = tk.Tk( )
screen = tk.Canvas(root)
screen.grid( )


offsets=(
    ( 0 , 0 , 1 , 0 ) , # top
    ( 1 , 0 , 1 , 1 ) , # upper right
    ( 1 , 1 , 1 , 2 ) , # lower right
    ( 0 , 2 , 1 , 2 ) , # bottom
    ( 0 , 1 , 0 , 2 ) , # lower left
    ( 0 , 0 , 0 , 1 ) , # upper left
    ( 0 , 1 , 1 , 1 ) , # middle
)


# Orden de los segmentos :
# ( a , b , c , d , e , f , g )
# Activo en alto
# −− a −−
# |     |
# f     b
# |     |
# −− g −−
# |     |
# e     c
# |     |
# −− d −−


class Digit:

    def__init__(self, canvas , x=10, y=10, length =20, width =4):
        self.canvas = canvas
        l = length
        self.segs = [ ]
        for x0 , y0 , x1 , y1 in offsets:
            self.segs.append(canvas.create_line(
                x+x0∗l,y+y0∗l,x+x1∗l,y+y1∗l,
                width = width ,state = ’hidden’))

    def show ( self , segments ):

        for ii d, on in zip (self.segs, segments ):
            self.canvas.item configure (iid,
            state = ’normal’ if on else ’ hidden ’)

dig = Digit ( screen , 10 , 10 ) ##
dig1 = Digit ( screen , 40 , 10 ) ##
dig2 = Digit ( screen , 70 , 10 ) ##
dig3 = Digit ( screen , 100 , 10 ) ##
n = 0

def update ( ) :
global n
dig.show ( ( 1 , 1 , 1 , 1 , 1 , 1 , 0 ) ) # Muestra 0
dig1.show ( ( 1 , 1 , 0 , 1 , 1 , 0 , 1 ) ) # Muestra 2
dig2.show ( ( 1 , 1 , 1 , 0 , 1 , 1 , 1 ) ) # Muestra A

# Segmentos encendiendo aleatoriamente

dig3.show ( tuple ( r and range ( 2 ) for _ in range ( 4 ) ) )
n = ( n+1)%10
root.after(1000 , update )
root.after(1000 , update )
root.mainloop ( )

